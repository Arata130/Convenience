// <auto-generated />
using System;
using Convenience.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Convenience.Migrations
{
    [DbContext(typeof(ConvenienceContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJisseki", b =>
                {
                    b.Property<string>("ChumonId")
                        .HasColumnType("character varying(20)")
                        .HasColumnName("chumon_code");

                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<DateOnly>("ChumonDate")
                        .HasColumnType("date")
                        .HasColumnName("chumon_date");

                    b.HasKey("ChumonId", "ShiireSakiId");

                    b.HasIndex("ShiireSakiId");

                    b.ToTable("chumon_jisseki");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJissekiMeisai", b =>
                {
                    b.Property<string>("ChumonId")
                        .HasColumnType("character varying(20)")
                        .HasColumnName("chumon_code");

                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<string>("ShiirePrdId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_prd_code");

                    b.Property<string>("ShohinId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shohin_code");

                    b.Property<decimal>("ChumonSu")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("chumon_su");

                    b.Property<decimal>("ChumonZan")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric()10, 2")
                        .HasColumnName("chumon_zan");

                    b.HasKey("ChumonId", "ShiireSakiId", "ShiirePrdId", "ShohinId");

                    b.HasIndex("ShiireSakiId", "ShiirePrdId", "ShohinId");

                    b.ToTable("chumon_jisseki_meisai");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShiireMaster", b =>
                {
                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<string>("ShiirePrdId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_prd_code");

                    b.Property<string>("ShohinId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shohin_code");

                    b.Property<decimal>("ShiirePcsPerUnit")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(7, 2)")
                        .HasColumnName("shiire_pcs_unit");

                    b.Property<string>("ShiirePrdName")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasColumnName("shiire_prd_name");

                    b.Property<string>("ShiireUnit")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_unit");

                    b.Property<decimal>("ShireTanka")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(7, 2)")
                        .HasColumnName("shiire_tanka");

                    b.HasKey("ShiireSakiId", "ShiirePrdId", "ShohinId");

                    b.HasIndex("ShohinId");

                    b.ToTable("shiire_master");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShiireSakiMaster", b =>
                {
                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<string>("Banchi")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("banchi");

                    b.Property<string>("ShiireSakiBusho")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasColumnName("shiire_saki_busho");

                    b.Property<string>("ShiireSakiKaisya")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasColumnName("shiire_saki_kaisya");

                    b.Property<string>("Shikuchoson")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shikuchoson");

                    b.Property<string>("Tatemonomei")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("tatemonomei");

                    b.Property<string>("Todoufuken")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("todoufuken");

                    b.Property<string>("YubinBango")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasColumnName("yubin_bango");

                    b.HasKey("ShiireSakiId");

                    b.ToTable("shiire_saki_master");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShohinMaster", b =>
                {
                    b.Property<string>("ShohinId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shohin_code");

                    b.Property<decimal>("ShohiZeiritsu")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15, 2)")
                        .HasColumnName("shohi_zeiritsu");

                    b.Property<decimal>("ShohiZeiritsuGaishoku")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15, 2)")
                        .HasColumnName("shohi_zeiritsu_gaisyoku");

                    b.Property<string>("ShohinName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasColumnName("shohin_name");

                    b.HasKey("ShohinId");

                    b.ToTable("shohin_master");
                });

            modelBuilder.Entity("ConvenienceSystem.Models.Date.ShiireDate.ShiireJiseeki", b =>
                {
                    b.Property<string>("ChumonId")
                        .HasColumnType("character varying(20)")
                        .HasColumnName("chumon_code");

                    b.Property<DateOnly>("ShiireDate")
                        .HasColumnType("date")
                        .HasColumnName("shiire_date");

                    b.Property<long>("SeqByShiireDate")
                        .HasColumnType("bigint")
                        .HasColumnName("seq_by_shiiredate");

                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<string>("ShiirePrdId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_prd_code");

                    b.Property<decimal>("NonyuSu")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("nonyu_su");

                    b.Property<DateTime>("ShiireDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("shiire_datetime");

                    b.Property<string>("ShohinId")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shohin_code");

                    b.HasKey("ChumonId", "ShiireDate", "SeqByShiireDate", "ShiireSakiId", "ShiirePrdId");

                    b.HasIndex("ChumonId", "ShiireSakiId", "ShiirePrdId", "ShohinId");

                    b.ToTable("shiire_jisseki");
                });

            modelBuilder.Entity("ConvenienceSystem.Models.Date.ShiireDate.SokoZaiko", b =>
                {
                    b.Property<string>("ShiireSakiId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shiire_saki_code");

                    b.Property<string>("ShiirePrdId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("soko_zaiko");

                    b.Property<string>("ShohinId")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("shohin_code");

                    b.Property<DateOnly>("LastDeliveryDate")
                        .HasColumnType("date")
                        .HasColumnName("last_delivery_date");

                    b.Property<DateOnly>("LastShiireDate")
                        .HasColumnType("date")
                        .HasColumnName("last_shiire_date");

                    b.Property<decimal>("SokoZaikoCaseSu")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("soko_zaiko_case_su");

                    b.Property<decimal>("SokoZaikoSu")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("soko_zaiko_su");

                    b.HasKey("ShiireSakiId", "ShiirePrdId", "ShohinId");

                    b.ToTable("soko_zaiko");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJisseki", b =>
                {
                    b.HasOne("Convenience.Models.Date.Chumon.ShiireSakiMaster", "ShiireSakiMaster")
                        .WithMany("ChumonJissekis")
                        .HasForeignKey("ShiireSakiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiireSakiMaster");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJissekiMeisai", b =>
                {
                    b.HasOne("Convenience.Models.Date.Chumon.ChumonJisseki", "ChumonJisseki")
                        .WithMany("ChumonJissekiMeisais")
                        .HasForeignKey("ChumonId", "ShiireSakiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Convenience.Models.Date.Chumon.ShiireMaster", "ShiireMaster")
                        .WithMany("ChumonJissekiMeisais")
                        .HasForeignKey("ShiireSakiId", "ShiirePrdId", "ShohinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChumonJisseki");

                    b.Navigation("ShiireMaster");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShiireMaster", b =>
                {
                    b.HasOne("Convenience.Models.Date.Chumon.ShiireSakiMaster", "ShiireSakiMaster")
                        .WithMany("ShiireMasters")
                        .HasForeignKey("ShiireSakiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Convenience.Models.Date.Chumon.ShohinMaster", "ShohinMaster")
                        .WithMany("ShiireMasters")
                        .HasForeignKey("ShohinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiireSakiMaster");

                    b.Navigation("ShohinMaster");
                });

            modelBuilder.Entity("ConvenienceSystem.Models.Date.ShiireDate.ShiireJiseeki", b =>
                {
                    b.HasOne("Convenience.Models.Date.Chumon.ChumonJissekiMeisai", "ChumonJissekiMeisais")
                        .WithMany("ShiireJiseekis")
                        .HasForeignKey("ChumonId", "ShiireSakiId", "ShiirePrdId", "ShohinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChumonJissekiMeisais");
                });

            modelBuilder.Entity("ConvenienceSystem.Models.Date.ShiireDate.SokoZaiko", b =>
                {
                    b.HasOne("Convenience.Models.Date.Chumon.ShiireMaster", "ShiireMaster")
                        .WithMany("SokoZaikos")
                        .HasForeignKey("ShiireSakiId", "ShiirePrdId", "ShohinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiireMaster");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJisseki", b =>
                {
                    b.Navigation("ChumonJissekiMeisais");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ChumonJissekiMeisai", b =>
                {
                    b.Navigation("ShiireJiseekis");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShiireMaster", b =>
                {
                    b.Navigation("ChumonJissekiMeisais");

                    b.Navigation("SokoZaikos");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShiireSakiMaster", b =>
                {
                    b.Navigation("ChumonJissekis");

                    b.Navigation("ShiireMasters");
                });

            modelBuilder.Entity("Convenience.Models.Date.Chumon.ShohinMaster", b =>
                {
                    b.Navigation("ShiireMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
